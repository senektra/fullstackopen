# https://nixpacks.com/docs/configuration/file

# set up some variables to minimize annoyance
[variables]
# the update notification is relatively useless in a production environment
NPM_CONFIG_UPDATE_NOTIFIER = 'false'
# the fund notification is also pretty useless in a production environment
NPM_CONFIG_FUND = 'false'
# specify the caddy version to use here, without a 'v' prefix. https://github.com/caddyserver/caddy/releases
CADDY_VERSION = '2.7.6'

# download and untar caddy
[phases.caddy]
cmds = [
    # download the caddy release specified by 'CADDY_VERSION' from GitHub
    'curl -fsSLo caddy.tar.gz "https://github.com/caddyserver/caddy/releases/download/v${CADDY_VERSION}/caddy_${CADDY_VERSION}_linux_amd64.tar.gz"',
    # only extract 'caddy' from the tarball
    'tar -zxvf caddy.tar.gz caddy',
    # enable file execution for caddy, needed to execute downloaded files
    'chmod +x caddy',
]
# format the Caddyfile with fmt
[phases.fmt]
# make sure this phase runs after the 'caddy' phase so that we know we have caddy downloaded
dependsOn = ['caddy']
# format the Caddyfile to fix any formatting inconsistencies
cmds = ['caddy fmt --overwrite Caddyfile']

# copy caddy and build artifacts to a new image and start the caddy web server
[start]
# make sure this phase runs after the default 'setup' phase
dependsOn = ['setup']
# use a new ubuntu image to run the caddy server in
runImage = 'ubuntu:20.04'
# copy only the needed files and folders into the new image (Vite builds to a 'dist' folder)
onlyIncludeFiles = ['caddy', 'Caddyfile', 'dist']
# start caddy using the Caddyfile config and caddyfile adapter
cmd = './caddy run --config Caddyfile --adapter caddyfile 2>&1'
